/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/bootstrap@4.5.0/js/src/button.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import $ from"jquery";const NAME="button",VERSION="4.5.0",DATA_KEY="bs.button",EVENT_KEY=`.${DATA_KEY}`,DATA_API_KEY=".data-api",JQUERY_NO_CONFLICT=$.fn[NAME],CLASS_NAME_ACTIVE="active",CLASS_NAME_BUTTON="btn",CLASS_NAME_FOCUS="focus",SELECTOR_DATA_TOGGLE_CARROT='[data-toggle^="button"]',SELECTOR_DATA_TOGGLES='[data-toggle="buttons"]',SELECTOR_DATA_TOGGLE='[data-toggle="button"]',SELECTOR_DATA_TOGGLES_BUTTONS='[data-toggle="buttons"] .btn',SELECTOR_INPUT='input:not([type="hidden"])',SELECTOR_ACTIVE=".active",SELECTOR_BUTTON=".btn",EVENT_CLICK_DATA_API=`click${EVENT_KEY}.data-api`,EVENT_FOCUS_BLUR_DATA_API=`focus${EVENT_KEY}.data-api `+`blur${EVENT_KEY}.data-api`,EVENT_LOAD_DATA_API=`load${EVENT_KEY}.data-api`;class Button{constructor(t){this._element=t}static get VERSION(){return VERSION}toggle(){let t=!0,e=!0;const s=$(this._element).closest(SELECTOR_DATA_TOGGLES)[0];if(s){const E=this._element.querySelector(SELECTOR_INPUT);if(E){if("radio"===E.type)if(E.checked&&this._element.classList.contains(CLASS_NAME_ACTIVE))t=!1;else{const t=s.querySelector(SELECTOR_ACTIVE);t&&$(t).removeClass(CLASS_NAME_ACTIVE)}t&&("checkbox"!==E.type&&"radio"!==E.type||(E.checked=!this._element.classList.contains(CLASS_NAME_ACTIVE)),$(E).trigger("change")),E.focus(),e=!1}}this._element.hasAttribute("disabled")||this._element.classList.contains("disabled")||(e&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(CLASS_NAME_ACTIVE)),t&&$(this._element).toggleClass(CLASS_NAME_ACTIVE))}dispose(){$.removeData(this._element,DATA_KEY),this._element=null}static _jQueryInterface(t){return this.each(function(){let e=$(this).data(DATA_KEY);e||(e=new Button(this),$(this).data(DATA_KEY,e)),"toggle"===t&&e[t]()})}}$(document).on(EVENT_CLICK_DATA_API,'[data-toggle^="button"]',t=>{let e=t.target;const s=e;if($(e).hasClass("btn")||(e=$(e).closest(".btn")[0]),!e||e.hasAttribute("disabled")||e.classList.contains("disabled"))t.preventDefault();else{const E=e.querySelector(SELECTOR_INPUT);if(E&&(E.hasAttribute("disabled")||E.classList.contains("disabled")))return void t.preventDefault();"LABEL"===s.tagName&&E&&"checkbox"===E.type&&t.preventDefault(),Button._jQueryInterface.call($(e),"toggle")}}).on(EVENT_FOCUS_BLUR_DATA_API,'[data-toggle^="button"]',t=>{const e=$(t.target).closest(".btn")[0];$(e).toggleClass("focus",/^focus(in)?$/.test(t.type))}),$(window).on(EVENT_LOAD_DATA_API,()=>{let t=[].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS));for(let e=0,s=t.length;e<s;e++){const s=t[e],E=s.querySelector(SELECTOR_INPUT);E.checked||E.hasAttribute("checked")?s.classList.add(CLASS_NAME_ACTIVE):s.classList.remove(CLASS_NAME_ACTIVE)}for(let e=0,s=(t=[].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE))).length;e<s;e++){const s=t[e];"true"===s.getAttribute("aria-pressed")?s.classList.add(CLASS_NAME_ACTIVE):s.classList.remove(CLASS_NAME_ACTIVE)}}),$.fn[NAME]=Button._jQueryInterface,$.fn[NAME].Constructor=Button,$.fn[NAME].noConflict=(()=>($.fn[NAME]=JQUERY_NO_CONFLICT,Button._jQueryInterface));export default Button;
//# sourceMappingURL=/sm/c46efa4366b73a91bedc5039c382af254ead4f34932f29ad7de2af6fdbe79277.map